# Pipeline to automatically sync
# the 'aft-account-request' Azure DevOps repository to one of several 
# AWS CodeCommit repositories linked to different AWS Account Factory for Terraform
# instances depending on the git branch:
#
# feature/*   -> Development AFT Instance CodeCommit Repo main branch
# main        -> Production AFT Instance CodeCommit Repo main branch

trigger:
- 'feature/*'
- 'main'
# Use latest Ubuntu image
pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: sync_repos
  displayName: 'Sync repositories with AWS CodeCommit'

  # Variables
  variables:
    # Extract the branch name from the source branch build variable
    ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/') }}:
      BRANCH_NAME: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
    ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
      BRANCH_NAME: $[ replace(variables['System.PullRequest.TargetBranch'], 'refs/heads/', '') ]

  # Pipeline
  steps:
    - checkout: none
    - script: |
          
          # Install urlencode function to encode reserved characters in passwords
          sudo apt-get install gridsite-clients

          # Create local clone of the source branch of the Azure DevOps repository
          git clone --single-branch --branch $(BRANCH_NAME) https://${AZURE_GIT_USERNAME}:$(urlencode ${AZURE_GIT_PASSWORD})@${AZURE_REPO_URL} source-repo
          
          # Sync to Dev AWS CodeCommit repository
          cd source-repo
          echo "### Pushing branch $(BRANCH_NAME) to remote main branch"
          git push --force https://${AWS_DEV_GIT_USERNAME}:$(urlencode ${AWS_DEV_GIT_PASSWORD})@${AWS_DEV_REPO_URL} $(BRANCH_NAME):main
            
      condition: and(succeeded(), startsWith(variables['BRANCH_NAME'], 'feature/'))
      displayName: 'Sync repository with Dev AWS CodeCommit Repo'
      env:
        AZURE_REPO_URL: $(AZURE_REPO_URL)
        AZURE_GIT_USERNAME: $(AZURE_GIT_USERNAME)
        AZURE_GIT_PASSWORD: $(AZURE_GIT_PASSWORD)
        AWS_DEV_REPO_URL: $(AWS_DEV_REPO_URL)
        AWS_DEV_GIT_USERNAME: $(AWS_DEV_GIT_USERNAME)
        AWS_DEV_GIT_PASSWORD: $(AWS_DEV_GIT_PASSWORD)

    - script: |
          
          # Install urlencode function to encode reserved characters in passwords
          sudo apt-get install gridsite-clients

          # Create local clone of the source branch of the Azure DevOps repository
          git clone --single-branch --branch main https://${AZURE_GIT_USERNAME}:$(urlencode ${AZURE_GIT_PASSWORD})@${AZURE_REPO_URL} source-repo
          
          # Sync to Dev AWS CodeCommit repository
          cd source-repo
          echo "### Pushing branch main to remote main branch"
          git push --force https://${AWS_PROD_GIT_USERNAME}:$(urlencode ${AWS_PROD_GIT_PASSWORD})@${AWS_PROD_REPO_URL} $(BRANCH_NAME):main
            
      condition: and(succeeded(), startsWith(variables['BRANCH_NAME'], 'main'))
      displayName: 'Sync repository with Prod AWS CodeCommit Repo'
      env:
        AZURE_REPO_URL: $(AZURE_REPO_URL)
        AZURE_GIT_USERNAME: $(AZURE_GIT_USERNAME)
        AZURE_GIT_PASSWORD: $(AZURE_GIT_PASSWORD)
        AWS_PROD_REPO_URL: $(AWS_PROD_REPO_URL)
        AWS_PROD_GIT_USERNAME: $(AWS_PROD_GIT_USERNAME)
        AWS_PROD_GIT_PASSWORD: $(AWS_PROD_GIT_PASSWORD)